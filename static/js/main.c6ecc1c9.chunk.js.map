{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","key","document","addEventListener","event","setState","removeEventListener","className","this","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,IAAK,IAHT,uDAME,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEL,YAAY,EAAMC,IAAKG,EAAMH,WARnD,kCAYE,WAA8B,IAAD,OAC3BC,SAASI,oBAAoB,SAAS,SAACF,GACrC,EAAKC,SAAS,CAAEJ,IAAKG,EAAMH,WAdjC,oBAkBE,WACE,OACE,qBAAKM,UAAU,MAAf,SACGC,KAAKT,MAAMC,WACV,mBAAGO,UAAU,eAAb,4CAC+BC,KAAKT,MAAME,IAD1C,OAIA,mBAAGM,UAAU,eAAb,2CA1BV,GAAyBE,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.c6ecc1c9.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: boolean;\n  key: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    pressedKey: false,\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: true, key: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ key: event.key });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.pressedKey ? (\n          <p className=\"App__message\">\n            {`The last pressed key is [${this.state.key}]`}\n          </p>\n        ) : (\n          <p className=\"App__message\">\n            Nothing was pressed yet\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}